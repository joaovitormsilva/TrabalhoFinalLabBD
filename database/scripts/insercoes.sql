CREATE OR REPLACE TABLE STATUS (
    StatusId INTEGER PRIMARY KEY,
    Status VARCHAR(255)
);

CREATE TABLE CIRCUITS(
    CircuitID INTEGER NOT NULL PRIMARY KEY,
    CircuitRef VARCHAR(50) NOT NULL,
    Name VARCHAR(50),
    Location VARCHAR (50) NOT NULL,
    Country VARCHAR (50) NOT NULL,
    Lat DECIMAL(200),
    Lng DECIMAL(200),
    Alt DECIMAL(200),
    URL VARCHAR(200)
);

CREATE TABLE RACES (
    RaceId INTEGER NOT NULL PRIMARY KEY,
    Year INTEGER,
    Round INTEGER,
    CircuitId INTEGER,
    Name VARCHAR(255),
    Date DATE,
    Time VARCHAR(100),
    URL VARCHAR(500),

    FOREIGN KEY (CircuitId) REFERENCES CIRCUITS(CircuitId) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE DRIVER(
    DriverId INTEGER PRIMARY KEY,
    DriverRef VARCHAR(20) NOT NULL,
    Number VARCHAR(200),
    Code VARCHAR(100),
    Forename VARCHAR(200),
    Surname VARCHAR(200),
    dob DATE,
    Nationality VARCHAR(200),
    URL VARCHAR(200)
);

CREATE TABLE CONSTRUCTORS(
    ConstructorID INTEGER PRIMARY KEY,
    ConstructorRef VARCHAR(2000) NOT NULL,
    Name VARCHAR(2000),
    Nationality VARCHAR(2000),
    URL VARCHAR(2000)
);

CREATE TABLE DRIVERSTANDINGS(
    DriverStandingsId INTEGER PRIMARY KEY,
    RaceID INTEGER NOT NULL,
    DriverId INTEGER NOT NULL,
    Points DECIMAL(6,2) NOT NULL,
    Position INTEGER NOT NULL,
    PositionText VARCHAR(200),
    Wins INTEGER NOT NULL,
    FOREIGN KEY (RaceId) REFERENCES RACES(RaceId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE LAPTIMES(
    RaceId INTEGER,
    DriverId INTEGER,
    Lap INTEGER,
    Position INTEGER NOT NULL,
    Time VARCHAR(20),
    Milliseconds VARCHAR(50),
    PRIMARY KEY(RaceId, DriverId, Lap),
    FOREIGN KEY (RaceId) REFERENCES RACES(RaceId) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (DriverId) REFERENCES DRIVER(DriverId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE RESULTS (
    ResultId INTEGER NOT NULL PRIMARY KEY,
    RaceId INTEGER,
    DriverId INTEGER,
    ConstructorId INTEGER,
    Number VARCHAR(20),
    Grid INTEGER,
    Position VARCHAR(10),
    PositionText VARCHAR(10),
    PositionOrder INTEGER,
    Points DECIMAL(5,2),
    Laps INTEGER,
    Time VARCHAR(50),
    Milliseconds VARCHAR(100),
    FastestLap VARCHAR(20),
    Rank VARCHAR(20),
    FastestLapTime VARCHAR(20),
    FastestLapSpeed VARCHAR(20),
    StatusId INTEGER,
    
    FOREIGN KEY (RaceId) REFERENCES RACES(RaceId) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY (DriverId) REFERENCES DRIVER(DriverId) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY (ConstructorId) REFERENCES CONSTRUCTORS(ConstructorId) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY (StatusId) REFERENCES STATUS(StatusId) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE QUALIFYING (
    QualifyId INTEGER NOT NULL PRIMARY KEY,
    RaceId INTEGER,
    DriverId INTEGER,
    ConstructorId INTEGER,
    Number INTEGER,
    Position INTEGER,
    Q1 VARCHAR(20),
    Q2 VARCHAR(20),
    Q3 VARCHAR(20),

    FOREIGN KEY (RaceId) REFERENCES RACES(RaceId) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY (DriverId) REFERENCES DRIVER(DriverId) ON UPDATE CASCADE ON DELETE RESTRICT,
    FOREIGN KEY (ConstructorId) REFERENCES CONSTRUCTORS(ConstructorId) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE GEOCITIES15K (
    GeonameID VARCHAR(200) PRIMARY KEY,
    Name VARCHAR(200),
    AsciiName VARCHAR(200),
    AlternateNames VARCHAR(8000), 
    Lat VARCHAR(100),
    Long VARCHAR(100),
    FeatureClass VARCHAR(100),
    FeatureCode VARCHAR(100),
    Country VARCHAR(100),
    CC2 varchar(255),
    Admin1Code VARCHAR(20),
    Admin2Code VARCHAR(80),
    Admin3Code VARCHAR(20),
    Admin4Code VARCHAR(200),
    Population INTEGER,
    Elevation INTEGER,
    Dem INTEGER,
    TimeZone VARCHAR(40),
    Modification DATE
);

CREATE TABLE COUNTRIES(
    Id INTEGER PRIMARY KEY,
    Code VARCHAR(5),
    Name VARCHAR(255),
    Continent VARCHAR(5),
    WikipediaLink VARCHAR(1000),
    Keywords VARCHAR(255)
);

CREATE TABLE AIRPORTS (
    Id INTEGER PRIMARY KEY,
    Ident VARCHAR(200),
    Type VARCHAR(200),
    Name VARCHAR(200),
    LatDeg DECIMAL(10),
    LongDeg DECIMAL(10),
    ElevFt INTEGER,
    Continent VARCHAR(200),
    ISOCountry VARCHAR(2),
    ISORegion VARCHAR(200),
    City VARCHAR(200),
    Scheduled_service VARCHAR(200),
    GPSCode VARCHAR(200),
    IATACode VARCHAR(200),
    LocalCode VARCHAR(200),
    HomeLink VARCHAR(1000),
    WikipediaLink VARCHAR(1000),
    Keywords VARCHAR(99999)
);

CREATE TABLE SEASONS(
    Year INTEGER PRIMARY KEY,
    URL VARCHAR(255)
);